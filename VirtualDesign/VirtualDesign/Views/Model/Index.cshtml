@model IEnumerable<VirtualDesign.Models.Model>

@{
    ViewBag.Title = "Index";
    var myModel = Model.ToList();
    int count = 0;
    int residue = (myModel.Count % (int)ViewBag.column);
    int result = myModel.Count / (int)ViewBag.column;
}

@using VirtualDesign.Helpers

<div class="row hidden-xlg">
    @for (int i = 0; i < (int)ViewBag.column; i++)
    {
        if (myModel.Count > count)
        {
            //dynamic calc size of rows      
            int row = residue > 0 ? (result + 1) : result;
            <div class="col-md-4 col-sm-6">
               
                @for (int j = 0; j < row; j++)
                {
                    //if (myModel.Count > count)
                    //{
                        var item = myModel[count];
                        <div class="row">
                            <div class="col-md-12 m-b-10">
                                <div class="widget-item ">
                                    <div class="controller overlay right"> <a href="javascript:;" class="reload"></a> <a href="javascript:;" class="remove"></a> </div>
                                    <div class="tiles green  overflow-hidden full-height" style="max-height:214px">
                                        <div class="overlayer bottom-right fullwidth">
                                            <div class="overlayer-wrapper">
                                                <div class="tiles gradient-black p-l-20 p-r-20 p-b-20 p-t-20">
                                                    <div class="pull-right">
                                                        @foreach (var tag in item.Tags.Take(3)){
                                                            <a href="#" class="hashtags transparent"> @tag.Name </a>
                                                         }
                                                    </div>
                                                    <div class="clearfix"></div>
                                                </div>
                                            </div>
                                        </div>

                                        @{

                                            var imgSrc = @Url.Content("~/Content/user/model/model_723_aal.jpg");
                                            if (item.PictureFile != null)
                                                imgSrc = "data:image/png;base64," + Convert.ToBase64String(item.PictureFile);
                                        }
                                        <img src="@imgSrc" alt="" class="lazy hover-effect-img" />
                                    </div>
                                    <div class="tiles white ">
                                        <div class="tiles-body">
                                            <div class="row">
                                                <div class="user-profile-pic text-left">
                                                    <img width="69" height="69" data-src-retina="@Url.Content("~/Content/assets/img/profiles/avatar2x.jpg")" data-src="@Url.Content("~/Content/assets/img/profiles/avatar.jpg")" src="@Url.Content("~/Content/assets/img/profiles/avatar.jpg")" alt="">
                                                    <div class="pull-right m-r-20 m-t-35"> <span class="bold text-black small-text">@item.CreatedDate.TimeAgo()</span> </div>
                                                </div>
                                                <div class="col-md-12 no-padding">
                                                    <div class="user-comment-wrapper">
                                                        <div class="comment">
                                                            <div class="user-name text-black bold"><span class="semi-bold">@Html.DisplayFor(modelItem => item.Name)</span> </div>
                                                            <div class="preview-wrapper">@@ @Html.DisplayFor(modelItem => item.Username) </div>
                                                        </div>
                                                        <div class="clearfix"></div>
                                                    </div>
                                                    <div class="m-r-20 m-t-20 m-b-10  m-l-10">
                                                        <p class="p-b-10">@Html.DisplayFor(modelItem => item.Description)</p>
                                                        <p> @Html.DisplayFor(modelItem => item.Category.Name) </p>
                                                        <div class="post p-t-10 p-b-10">
                                                            <ul class="action-bar no-margin p-b-20 ">
                                                                <li><a href="#" class="text-error bold"><i class="fa fa-heart  m-r-10"></i>250</a> </li>
                                                            </ul>
                                                            <div class="clearfix"></div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    //}
                    count++;
                }
            </div>
           residue--;
        }
    }
</div>



